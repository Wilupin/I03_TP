==== COMPILE ====
- edit system.mk and/or Makefile and modify to your need. E.g.
  * customize CUDA toolkit location
  * enable double precision

- type make, this will build the following exe:
* heat_solver_cpu
* heat2d_solver_gpu_naive
* heat2d_solver_gpu_shmem1
* heat2d_solver_gpu_shmem2
* heat2d_solver_gpu_shmem3
* heat3d_solver_gpu_naive
* heat3d_solver_gpu_shmem1
* heat3d_solver_gpu_shmem2
* heat3d_solver_gpu_shmem3
* heat3d_solver_gpu_shmem4

==== RUN ====
For the CPU version, just type
     ./heat_solver_cpu

For the 2D GPU naive version, just type
    ./heat2d_solver_gpu_naive

You can change paramaters by editing heatEqSolver.par




==== CUDA DOCUMENTATION ====

- CUDA Toolkit documentation:
http://docs.nvidia.com/cuda/index.html

- local copy:
/usr/local/cuda50/doc/html/index.html


==== GOING FURTHER ==== 
- use an implicit scheme (e.g. Crank-Nicholson); see tri-diagonal solver on GPU : www.jcohen.name/papers/Zhang_Fast_2009.pdf
- use cudpp 2.0 (http://code.google.com/p/cudpp/) and the tridiagonal solver http://cudpp.googlecode.com/svn/tags/2.0/doc/html/group__public_interface.html#gabd3c1f97e1d22839756fd2594aaefb56
